---
import { Icon } from "astro-icon/components";
import { Image, Picture } from "astro:assets";
import type { Project } from "../types";

type Props = {
  project: Project;
};

const { project } = Astro.props;
const {
  title,
  deploymentDate,
  description,
  imageUrl,
  technologies,
  githubUrl,
  liveUrl,
  stars,
} = project;
---

<article class="project-card">
  <Picture
    src={imageUrl}
    class="project-image"
    alt={`${title} project image`}
  />

  <div class="content">
    <span class="text-container">
      <h2>{title}</h2>
      <p>{description}</p>
    </span>

    <div class="bottom-content">
      <div class="tech-stack">
        {
          technologies.map((tech) => (
            <span class={`tech-badge ${tech}`}>{tech}</span>
          ))
        }
      </div>

      <div class="links">
        <a
          href={githubUrl}
          target="_blank"
          rel="noreferrer noopener"
          class="action-button"
        >
          <Icon name="github" size={18} />
          {
            stars && (
              <span class="stars">
                {stars}
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="12"
                  height="12"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="star-icon"
                >
                  <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
                </svg>
              </span>
            )
          }
        </a>

        {
          liveUrl && (
            <a
              href={liveUrl}
              target="_blank"
              rel="noreferrer noopener"
              class="action-button"
            >
              <Icon name="link" size={18} />
              <span class="button-text">Live</span>
            </a>
          )
        }

        <a
          href={githubUrl}
          target="_blank"
          rel="noreferrer noopener"
          class="action-button"
        >
          <Icon name="image" size={18} />
          <span class="button-text">Screenshots</span>
        </a>

        <span class="deployment-date desktop">{deploymentDate}</span>
      </div>
    </div>
  </div>
</article>

<style>
  .project-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    width: fit-content;
    padding: 2rem;
    margin-inline: 1.5rem;
    background-color: #202228;
    border-radius: 0.375rem
    transition: all 0.3s ease;
  }

  .project-card:hover {
    transform: scale(1.02);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  .project-image {
    max-width: 200px;
    max-height: 200px;
    border-radius: 0.375rem;
    border: 8px solid #1b1a20;
    transition: transform 0.3s ease;
  }

  .content {
    display: flex;
    flex-direction: column;
    text-align: center;
    color: #ffffff;
  }

  h2 {
    font-weight: 700;
    font-size: 1.875rem;
    color: var(--primary);
    margin-bottom: 0.5rem;
    margin-top: 0;
  }

  .bottom-content {
    display: flex;
    flex-direction: column;
    margin-top: auto;
  }

  .tech-stack {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 0.5rem;
  }

  .tech-badge {
    padding: 0.25rem 0.75rem;
    background-color: #1b1a1f;
    border-radius: 0.25rem;
    font-size: 0.875rem;
  }

  .links {
    display: flex;
    gap: 0.5rem;
    flex-direction: row;
    font-size: 0.75rem;
    font-weight: 700;
    justify-content: center;
  }

  .action-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: #1b1a1f;
    border: 2px solid #1b1a1f;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    color: inherit;
    text-decoration: none;
  }

  .action-button:hover {
    border-color: var(--primary);
    transform: translateY(-2px);
  }

  .stars {
    display: flex;
    align-items: center;
  }

  .star-icon {
    margin-left: 1px;
  }

  .button-text {
    display: none;
  }

  .deployment-date {
    margin-top: 0.5rem;
  }

  .deployment-date.desktop {
    display: none;
  }

  @media (min-width: 640px) {
    .project-card {
      flex-direction: row;
      align-items: stretch;
    }

    .content {
      text-align: left;
    }

    .tech-stack {
      justify-content: flex-start;
    }

    .links {
      justify-content: flex-start;
    }

    .button-text {
      display: block;
    }
  }

  @media (min-width: 768px) {
    .deployment-date.mobile {
      display: none;
    }

    .deployment-date.desktop {
      display: block;
      margin-top: auto;
      margin-left: auto;
    }
  }

  .React {
    background: #5ed3f3;
    color: black;
  }
  .Typescript {
    background: hsl(211, 57%, 50%);
    color: white;
  }
  .Tailwind {
    background: #38bdf8;
    color: black;
  }
  .NextJS {
    background: #000000;
    color: white;
  }
  .Dart {
    background: #00b4ab;
    color: black;
  }
  .Flutter {
    background: #47ccf6;
    color: black;
  }
  .Golang {
    background: #00acd7;
  }
  .Python {
    background: #306998;
    color: #ffdd54;
  }
  .NodeJS {
    background: #68a063;
    color: white;
  }
  .Firebase {
    background: #ffca28;
    color: black;
  }
  .MongoDB {
    background: #13aa52;
    color: #0a2535;
  }
  .PostgreSQL {
    background: #336791;
    color: white;
  }
  .Supabase {
    background: #44d192;
    color: black;
  }
  .Vue {
    background: #41b883;
    color: black;
  }
  .GraphQL {
    background: #e535ab;
    color: white;
  }
  .Default {
    background: white;
  }
</style>
